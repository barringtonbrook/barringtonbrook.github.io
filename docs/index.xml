<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Barrington Brook: Portfolio</title>
    <link>https://barringtonbrook.github.io/</link>
    <description>Recent content on Barrington Brook: Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://barringtonbrook.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://barringtonbrook.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://barringtonbrook.github.io/about/</guid>
      <description>My Team I am a DevOps engineer apprenctice in Hack IT and Whip IT team within Universal Credit, DWP digital. We are the DevOps team that build and support infrastructure for products and projects on Burbank and UC platforms. We work closely with the Feature Teams in Leeds and Manchester.
We are currently using the scrum framework to organise and manage our work. That means we have decide on sprint tickets in week/two week blocks, have daily scrum meetings as well as retrospectives.</description>
    </item>
    
    <item>
      <title>Decomissioning AWS services</title>
      <link>https://barringtonbrook.github.io/posts/decomissioning_resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://barringtonbrook.github.io/posts/decomissioning_resources/</guid>
      <description>produces this
Introduction At the end of May we were tasked with decommisioning resources on the legacy AWS accounts. Not only this but to create a documented and repeatable procedure.
After a discussion with the tech lead we decided to use a certain set of buckets to test our procedure. Me and the other apprentice decided to seperate concerns. He would focus on programmatically removing the buckets and I would work on a way of migrating the important data kept within them.</description>
    </item>
    
    <item>
      <title>DevOps presentation</title>
      <link>https://barringtonbrook.github.io/posts/presentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://barringtonbrook.github.io/posts/presentation/</guid>
      <description>Introduction We were tasked with presenting the work of the Hack team as well as an introduction to DevOps practices and technologies more generally to a non technical audience. The Audience was a portfolio team whose interest included are work but who didn&amp;rsquo;t necessarily have any technical background.
The Structure of the Presentation From the beginning I suggested that it might be useful to divide our presentation into two parts. As DevOps practices are largely the result of and reaction to prior working practices in manging IT infrastructure and Ops, I reasoned that our introduction to these practices would not make sense without the added context of what they were replacing.</description>
    </item>
    
    <item>
      <title>Knowledge, Skills and Behaviours</title>
      <link>https://barringtonbrook.github.io/ksbs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://barringtonbrook.github.io/ksbs/</guid>
      <description>Knowledge K1 Continuous Integration - the benefits of frequent merging of code, the creation of build artefacts and ensuring all tests pass, with automation throughout - including common tooling. K2 The principles of distributed Source Control, including how to exploit the features of the tool, such as branching. K3 How to use data ethically and the implications for wider society, with respect to the use of data, automation and artificial intelligence within the context of relevant data protection policy and legislation.</description>
    </item>
    
    <item>
      <title>UCCLI</title>
      <link>https://barringtonbrook.github.io/posts/uccli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://barringtonbrook.github.io/posts/uccli/</guid>
      <description>Introduction UCCLI is framework for the distribution and execution of versioned tooling and processes.
The main problems it seeks to solve are as follows.
New starters having to install n amounts of software in their laptop setup Established team members having to each maintain a wide set of tooling on their own machines, and be consious about falling out of versions of tooling to that of their peers Team members coodirdinating the upgrade of tooling on their machines amongst themselves and other teams Team members maintaing a common set of aliases on their machines The tooling on developer machines being a different version or missing from CI/CD workers There not being a standard way in which to perform a specific action </description>
    </item>
    
  </channel>
</rss>
