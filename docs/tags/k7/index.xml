<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>K7 on Barrington Brook: Portfolio</title>
    <link>https://barringtonbrook.github.io/tags/k7/</link>
    <description>Recent content in K7 on Barrington Brook: Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://barringtonbrook.github.io/tags/k7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Decomissioning AWS services</title>
      <link>https://barringtonbrook.github.io/posts/decomissioning_resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://barringtonbrook.github.io/posts/decomissioning_resources/</guid>
      <description>produces this
Introduction At the end of May we were tasked with decommisioning resources on the legacy AWS accounts. Not only this but to create a documented and repeatable procedure.
After a discussion with the tech lead we decided to use a certain set of buckets to test our procedure. Me and the other apprentice decided to seperate concerns. He would focus on programmatically removing the buckets and I would work on a way of migrating the important data kept within them.</description>
    </item>
    
    <item>
      <title>UCCLI</title>
      <link>https://barringtonbrook.github.io/posts/uccli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://barringtonbrook.github.io/posts/uccli/</guid>
      <description>Introduction UCCLI is framework for the distribution and execution of versioned tooling and processes.
The main problems it seeks to solve are as follows.
New starters having to install n amounts of software in their laptop setup Established team members having to each maintain a wide set of tooling on their own machines, and be consious about falling out of versions of tooling to that of their peers Team members coodirdinating the upgrade of tooling on their machines amongst themselves and other teams Team members maintaing a common set of aliases on their machines The tooling on developer machines being a different version or missing from CI/CD workers There not being a standard way in which to perform a specific action </description>
    </item>
    
  </channel>
</rss>
