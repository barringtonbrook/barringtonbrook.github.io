<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>S4 on Barrington Brook: Portfolio</title>
    <link>https://barringtonbrook.github.io/tags/s4/</link>
    <description>Recent content in S4 on Barrington Brook: Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://barringtonbrook.github.io/tags/s4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://barringtonbrook.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://barringtonbrook.github.io/about/</guid>
      <description>My Team I am a DevOps engineer apprenctice in Hack IT and Whip IT team within Universal Credit, DWP digital. We are the DevOps team that build and support infrastructure for products and projects on HCL2 and UC platforms. Within our team, there is a delivery manager, team Lead, several seniors, one junior and four apprentices. We work closely with the feature teams in Leeds and Manchester. These teams include developers, QAs (testing engineers), delivery managers and architects.</description>
    </item>
    
    <item>
      <title>AMI refresh automation project</title>
      <link>https://barringtonbrook.github.io/posts/ami-refresh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://barringtonbrook.github.io/posts/ami-refresh/</guid>
      <description>Introduction Date: 12 Dec 22
When a new Amazon Machine Image (AMI) is generated we need to update all of our instances with this new AMI. This can be quite a time consuming job so it was decided in a team day towards the end of the year that we would find a way to automate it. The first ticket for this work was to design and implement a process for refreshing auto-scaling groups in AWS.</description>
    </item>
    
  </channel>
</rss>
